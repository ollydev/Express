// This piece of code actually puts the language to a full test of nearly all basics
// Original work: https://villavu.com/forum/showthread.php?t=90383

// ToDo:
// - arrays, strings, Inc/Dec operators, function calls (to native only)
// - Magic internal function "str(<any type>)", proper print keyword.

function rem(x,y: Int64): Int64;
  var Result: Int64 = x - (x div y) * y
  return Result;
end;

function main()
  var n: Int64   = 1000;
  var len: Int64 = 10 * n / 3;

  var i, j, k, nines, predigit: int64 = 0;
  var a: TIntArray;
  var res: TIntArray;
  var resCount: Int64 = 0;
  
  
  SetLength(a, len+1);
  SetLength(res, n+1);
  
  
  var tm, tma:Double;
  GetTickCount(tm);
  
  for(j:=0; j<=len; j:=j+1) 
    a[j] := 2;   //Start with 2s
  
  var TEN: Int64 = 10;
  var TWO: Int64 = 2;
  var ONE: Int64 = 1;
  
  for(j:=0; j<n; j:=j+1) do
    var q: Int64 = 0;
    
    for(i:=len; i>=1; i:=i-ONE) do         //Work backwards
      var idx: Int32 = i-ONE;
      var tenidx: Int64 = TEN*a[idx];
      var qi := q*i;
      var x: Int64 = tenidx + qi
      var twoi: Int64 = TWO * i;
      var twoi_m1 := twoi - ONE;
      a[idx] := rem(x, twoi_m1)
      q      := x div twoi_m1
    end;
    
    a[0] := rem(q, TEN);
    q := q div TEN;
    
    if(q = 9) then
      nines := nines + 1
    elif(q = 10) then
      res[resCount] := predigit+1;
      resCount := resCount + 1;
      
      for(k:=1; k<=nines; k:=k+1) do
        res[resCount] := 0;            //zeros
        resCount := resCount + 1;
      end
      predigit := 0
      nines := 0
    else
      res[resCount] := predigit;
      resCount := resCount + 1;
      predigit := q;
      if(nines != 0) then
        for(k:=1; k<=nines; k:=k+1) do
          res[resCount] := 9;
          resCount := resCount + 1;
        end;
        nines := 0
      end
    end
  end;
 

  res[resCount] := predigit;
  GetTickCount(tma);
  print tma - tm;
  for(i:=0; i<=resCount; i:=i+1)
    print res[i];
end;

main()
